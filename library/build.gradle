def MAJOR_VERSION = 1
def MINOR_VERSION = 2
def PATCH_VERSION = 4

def VERSION_CODE = MAJOR_VERSION * 100 + MINOR_VERSION * 10 + PATCH_VERSION
def VERSION_NAME = MAJOR_VERSION + '.' + MINOR_VERSION + '.' + PATCH_VERSION
def ARTIFACT_VERSION = VERSION_NAME

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
//        classpath "io.realm:realm-gradle-plugin:1.1.1"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
//apply plugin: 'realm-android'
apply plugin: 'android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 22
        versionCode VERSION_CODE
        versionName VERSION_NAME
        multiDexEnabled true

        consumerProguardFiles 'proguard-rules.pro'

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'x86'
            // 还可以添加  'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                // 极光
                JPUSH_PKGNAME : "JPUSH_PKGNAME",
                JPUSH_APPKEY : "JPUSH_APPKEY",       //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

def SUPPORT_VERSION='23.3.0'
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:' + SUPPORT_VERSION
    compile 'com.android.support:appcompat-v7:' + SUPPORT_VERSION
    compile 'com.android.support:support-v13:' + SUPPORT_VERSION
    compile 'com.android.support:design:' + SUPPORT_VERSION
    compile 'com.android.support:support-annotations:' + SUPPORT_VERSION
    compile 'com.android.support:recyclerview-v7:' + SUPPORT_VERSION
    compile 'com.android.support:cardview-v7:' + SUPPORT_VERSION
    compile 'com.android.support:multidex:1.0.1'

    compile 'com.google.code.gson:gson:2.7'

    compile 'io.reactivex:rxjava:1.1.8'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.trello:rxlifecycle:0.6.1'
    compile 'com.trello:rxlifecycle-components:0.6.1'
    compile 'com.trello:rxlifecycle-navi:0.6.1'

    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'

    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'jp.wasabeef:glide-transformations:2.0.1'
    compile 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.3.0'

    compile 'com.google.dagger:dagger:2.6'
    apt 'com.google.dagger:dagger-compiler:2.6'

    compile 'com.github.campusappcn.AndRouter:router:1.2.5'
    apt 'com.github.campusappcn.AndRouter:compiler:1.2.5'

    compile 'org.parceler:parceler-api:1.1.5'
    apt 'org.parceler:parceler:1.1.5'

    compile 'cn.jiguang:jpush:2.1.9'

    compile 'com.umeng.analytics:analytics:6.0.4'
}


/**************************************************************************************************
 *                                        Bintray 相关                                            *
 **************************************************************************************************/
group = 'com.licaigc'
version = ARTIFACT_VERSION
project.archivesBaseName = 'androidbaselibrary'

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += configurations.compile
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/8/docs/api"
        title 'AndroidBaseLibrary'
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

install {
    repositories.mavenInstaller {
        pom.project {
            name 'androidbaselibrary'
            url 'https://github.com/wealthworks/AndroidBaseLibrary'

            packaging 'aar'
            groupId 'com.licaigc'
            artifactId 'androidbaselibrary'
            version ARTIFACT_VERSION
        }
    }
}

bintray {
    user = 'licaigc'
    key = project.hasProperty('BINTRAY_API_KEY') ? BINTRAY_API_KEY : System.getenv('BINTRAY_API_KEY')

    configurations = ['archives']

    dryRun = false
    publish = true

    pkg {
        repo = 'maven'
        name = 'androidbaselibrary'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/wealthworks/AndroidBaseLibrary.git'
        websiteUrl = 'https://github.com/wealthworks/AndroidBaseLibrary'
        version {
            name = ARTIFACT_VERSION
        }
    }
}